import{_ as s,c as i,b as a,w as n,a as t,e,r as l,o as r}from"./app.b5b4bd09.js";const V=JSON.parse('{"title":"Tailwind Marketplace Kit (TMK)","description":"","frontmatter":{"title":"Tailwind Marketplace Kit (TMK)"},"headers":[{"level":2,"title":"Goal","slug":"goal","link":"#goal","children":[]}],"relativePath":"guide/introduction.md"}'),d={name:"guide/introduction.md"},c=t("h1",{id:"welcome",tabindex:"-1"},[e("Welcome "),t("a",{class:"header-anchor",href:"#welcome","aria-hidden":"true"},"#")],-1),_=t("p",null,"welcome to Marketplace Kit for TailwindCSS framework. a collection of ready components to build a marketplace/shop/e-commerce website.",-1),u=t("p",null,"the TMK get better every day. as a rule of thumb we try to build components with pure HTML/JS/Tailwind syntax, but sometimes for specific functionalities, like state management, we have to use some framework features.",-1),h=e("Tailwind"),m=e(),f=e("E-Commerce"),p=e("Easy"),w=e(),g=e("Fast"),k=e(),b=e("Modern"),T=t("h2",{id:"goal",tabindex:"-1"},[e("Goal "),t("a",{class:"header-anchor",href:"#goal","aria-hidden":"true"},"#")],-1),x=t("p",null,"the goal is making it easy and fast to re-use components between front-end frameworks. we create a component with Html + tailwindcss. then, we use it as Nuxt/Angular/React component.",-1),y=t("p",null,"80% HTML/JS/Tailwind and 20% front-end framework features to make it reusable everywhere.",-1),M=e("Reusability"),v=e(),C=e("Cross Framework Component");function K(B,N,S,$,E,H){const o=l("Badge");return r(),i("div",null,[c,_,u,a(o,null,{default:n(()=>[h]),_:1}),m,a(o,null,{default:n(()=>[f]),_:1}),a(o,null,{default:n(()=>[p]),_:1}),w,a(o,null,{default:n(()=>[g]),_:1}),k,a(o,null,{default:n(()=>[b]),_:1}),T,x,y,a(o,null,{default:n(()=>[M]),_:1}),v,a(o,null,{default:n(()=>[C]),_:1})])}const F=s(d,[["render",K]]);export{V as __pageData,F as default};
